## A CEMU game profile file with all possible options commented
## Comments from : http://compat.cemu.info/wiki/Tutorial:Game_Profiles
## Made with cemu 1.12.2 as current version

## Paste as  $CEMUDIR/gameProfiles/*gamenumber*.ini
## Example : $CEMUDIR/gameProfiles/0005000C1012BC00.ini


[General]
    # 	If set to true, system rpl files will be loaded 
    # 	from /cafeLibs/ if present. Default value is true
loadSharedLibraries = true 
    # 	Use RDTSC instruction as timer source for emulated 
    # 	CPU, OS and audio
    # 	botw -> false, smash bros -> true
useRDTSC = true 

[Graphics]
    # 	Determines if Cemu will correctly emulate the non-IEEE 
    # 	behavior of the shader MUL instruction. Can fix graphic 
    # 	issues but also decreases shader performance and increases 
    # 	shader compile time. Default value is true. Since Cemu 
    # 	1.7.5 the option also supports a third mode min. In this 
    # 	mode, Cemu will emulate non-IEEE MUL instructions in a 
    # 	GPU-friendly way which generates less complex shaders. 
    # 	However, this mode might not be 100% accurate.
accurateShaderMul = true 
    #  	If set to false Cemu will use the Conventional Shader 
    # 	system from pre-1.8.0.
UseSeparableShaders = true
    # 	If set to true, GPU fence operations will be skipped. 
    # 	Default value is false. Enabling this option can lead 
    # 	to instability and crashes.
disableGPUFence = false 
    # 	Controls the accuracy of vertex and uniform data caching. 
    # 	A higher accuracy means more expensive checks which can 
    # 	slow down rendering. 
    # 	Possible values: 0 = high, 1 = medium, 2 = low
GPUBufferCacheAccuracy = 1 
    # 	The buffer cache size of the streamout buffer in MB.
    # 	Typically 24 or 48
streamoutBufferCacheSize = 48
    # 	If set to true, Cemu will try to mirror data written by 
    # 	GPU operations to CPU RAM (but only if access by CPU is 
    # 	assumed to be likely) 
    # 	Default value is false.
extendedTextureReadback = false 

[CPU]
    # 	Timer source for OS and CPU time. Supported values are 
    # 	hostBased (timers are based on actual OS time - recommended)  
    # 	and cycleCounter (timers are based on speed of emulated CPU).
cpuTimer = hostBased 
	# 	If set to false, the recompiler won't correctly round the 
	# 	result of single-precision instructions in certain situations. 
    # 	This can introduce gameplay bugs, but might also improve  
    # 	performance.
emulateSinglePrecision = true 
    # 	CPU mode. Possible values: Singlecore-Interpreter, 
    # 	Singlecore-Recompiler, Dualcore-Recompiler, 
    # 	Triplecore-Recompiler
cpuMode = Singlecore-Recompiler 


