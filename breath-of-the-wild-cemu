#!/bin/bash

# Usual bash flags
set -euo pipefail       # Exit on 1/ nonzero exit code 2/ unassigned variable 3/ pipe error
shopt -s nullglob       # Allow null globs
shopt -s expand_aliases # Enable alias (not on by default in un-interactive shells)

pkgname="breath-of-the-wild-cemu"

WINE_ROOT="$HOME/.local/share/wineprefixes" # winetricks default
GAMESAVES_ROOT="$HOME/Gamesaves"

# wine prefix, no trailing /
export WINEPREFIX="${WINE_ROOT}/${pkgname}"             
# win32, win64
export WINEARCH="win64"                                 
# eg. "dbghelp=n,b";
export WINEDLLOVERRIDES="mscoree=;mshtml=;dbghelp=n,b;d3d...=n;cemuhook.dll=n,b"
# eg. -all -fps
export WINEDEBUG=""                                     
# Windows DLLs to be installed with winetricks
winlibs="dxvk vcrun2017 corefonts" #"dxvk vcrun2017 corefonts "
# win10, xp, ...
winver="win10"                     


#
#   Magic constants
#
TITLESTRING1="00050000"  # Path inside cemu/mlc01/usr/title
TITLESTRING2="101C9500"
RPXHASH="dcac9927"       # Path for the transferrable shader cache


#
# Output to the console and notify-send if available
#
function notify () {
    echo "$@"
    if [[ -x $(which notify-send) ]] 
    then 
        notify-send --app-name=${pkgname} --icon=${pkgname} "$@"
    fi 
}


#
#   Delete the wine prefix
#
function resetWinePrefix() {
    notify "Deleting Wine Prefix"
    rm -rf ${WINEPREFIX}
}


#
#   First time setup includes: 
#     - Create a wineprefix with necessary libraries
#     - Create the folder structure for unionFS
#     - Copy over files that should be writable
#     - Symlink directory for games saves
#
function initialSetup () {

    notify "Performing 1st time setup (this may take some time)"

    # Cleanup existing stuff
    if [ -d "${WINEPREFIX}" ] 
    then 
        resetWinePrefix
    fi

    # Initialize prefix
    mkdir -p "${WINEPREFIX}"
    wineboot
    winetricks sandbox
    winetricks ${winver}
    winetricks ${winlibs}

    # Symlink RO CEMU files
    mkdir -p "${WINEPREFIX}/drive_c/${pkgname}/"
    ln -s /usr/share/cemu/Cemu.exe     "${WINEPREFIX}/drive_c/${pkgname}/Cemu.exe"
    ln -s /usr/share/cemu/cemuhook.dll "${WINEPREFIX}/drive_c/${pkgname}/cemuhook.dll"
    ln -s /usr/share/cemu/keystone.dll "${WINEPREFIX}/drive_c/${pkgname}/keystone.dll"
    ln -s /usr/share/cemu/sharedFonts  "${WINEPREFIX}/drive_c/${pkgname}/sharedFonts"

    # ? 
    if [ -L "${WINEPREFIX}/drive_c/${pkgname}/dbghelp.dll" ] ; then
        rm "${WINEPREFIX}/drive_c/${pkgname}/dbghelp.dll"
    fi

    # Copy RW CEMU files 
    cp -r /usr/share/cemu/gameProfiles "${WINEPREFIX}/drive_c/${pkgname}" # Might be the save files
    cp -r /usr/share/cemu/shaderCache  "${WINEPREFIX}/drive_c/${pkgname}"

    # Symlink RO game files 
    ln -s \
        "/usr/share/${pkgname}/basegame" \
        "${WINEPREFIX}/drive_c/${pkgname}/basegame"
    mkdir -p "${WINEPREFIX}/drive_c/${pkgname}/mlc01/usr/title/$TITLESTRING1"
    ln -s \
        "/usr/share/${pkgname}/mlc01/usr/title/$TITLESTRING1/$TITLESTRING2" \
        "${WINEPREFIX}/drive_c/${pkgname}/mlc01/usr/title/$TITLESTRING1/$TITLESTRING2"

    # Copy RW graphic packs
    mkdir -p "${WINEPREFIX}/drive_c/${pkgname}/graphicPacks"
    cp -r \
        "/usr/share/${pkgname}/graphicPacks/BreathOfTheWild" \
        "${WINEPREFIX}/drive_c/${pkgname}/graphicPacks/BreathOfTheWild"

    # Copy RW controller profiles
    cp -r \
        "/usr/share/${pkgname}/controllerProfiles" \
        "${WINEPREFIX}/drive_c/${pkgname}/controllerProfiles"

    # Install common keys
    #echo "$COMMONKEYS" > "${WINEPREFIX}/drive_c/program_files/cemu/keys.txt"

    # Install config file 
    #echo "$CONFIGFILE" > "${CEMUDIR}/gameProfiles/$(echo $TITLESTRING | sed 's:/::').ini"

    # Still missing: graphics packs

    # Mark successful
    sleep 3
    touch "${WINEPREFIX}/_success"
}


#
#   Parse CLI arguments and start application accordingly
#
function main() {

    validArguments=(
        "--reset" # Delete the wineprefix
        "--cemu"  # Start only CEMU
        "--game"  # Start the game
    )

    argument=${1:---game}

    if [[ ! " ${validArguments[*]} " =~ " ${argument} " ]]; then
        echo "Invalid argument: $1"
        return 1
    fi

    if [ "$argument" == "--reset" ]; 
    then 
        echo "--reset"
        resetWinePrefix
        return    
    fi

    # First-time setup
    if [ ! -f "${WINEPREFIX}/_success" ]; then
        initialSetup
    fi

    notify "Starting Application with wine"
    pushd "${WINEPREFIX}/drive_c/${pkgname}"

    if [ $argument == "--cemu" ] 
    then 
        echo "--cemu"
        wine Cemu.exe
    elif [ $argument == "--game" ]
    then
        echo "--game"
        __GL_THREADED_OPTIMIZATIONS=1 R600_DEBUG="nohyperz" wine \
            Cemu.exe \
            -g 'C:\'"${pkgname}"'\basegame\code\U-King.rpx'
    fi

    popd
}


main $@

